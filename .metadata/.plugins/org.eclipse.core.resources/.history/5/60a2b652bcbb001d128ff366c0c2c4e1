package chapter3.C.Constructor;


// 생성자
// 인스턴스가 생성될 때 호출되는 인스턴스 '초기화 메서드'
// 인스턴스 변수의 초기화 작업에 사용
// 인스턴스 생성 시에 실행되어야 할 작업을 작성하는 위치 


// 생성자의 조건
// 생성자의 이름은 해당 클래스명과 같아야함
// 생성자는 반환값이 없음


class Circle {
	double radius;
	double diameter;
	double circumference;
	double area;
	
	// 생성자 사용 방법
	// 클래스명([매개변수[,.....]]){인스턴스 생성시 실행할 코드}
	Circle(double radius){
		this.radius = radius; // this = 해당 인스턴스. 여기선 서클의 생성된 인스턴스 임으로 생성자 안에서는 꼭 찍어주자
		this.diameter = 2 * radius;
		this.circumference = 3.14 * radius * 2;
		this.area = 3.14 * radius * radius;
		

		System.out.println("Circle이 생성됩니다.");
	}
	
	
	// 생성자도 메서드이기 때문에 오버로딩을 적용해서
	// 매개변수에 따라 다른 작업을 수행하게 할 수 있음
	
	Circle(){
		System.out.println("비어있는 생성자");
		this.radius = 10;
		this.diameter = 2 * radius;
		this.circumference = 3.14 * radius * 2;
		this.area = 3.14 * radius * radius;
		
		
	}
	
	
	// 생성자를 이용한 인스턴스 복사
	Circle(Circle circle){//복사해서 새 인스턴스를 생성한 것이기 때문에 새 인스턴스에서 데이터를 변경한다고해서 원본의 데이터가 변경되지는 않는다. 
		this.radius = circle.radius;
		//this 인스턴스 자신
		this.diameter = circle.diameter;
		this.circumference = circle.circumference;
		this.area = circle.area;
		
		
	}
	
	
}

public class Constructor {

	public static void main(String[] args) {
		System.out.println("=====생성자=====");
		Circle circle1 = new Circle(); // Circle() <= 생성을 초기화 시켜주는 메서드// 선언만 되어있는상태가 아님 . 초기화가 되어있는 상태임
		Circle circle2 = new Circle(5);
		System.out.println("===============");
		
		System.out.println(circle1.area);
		System.out.println(circle2.area);
		
		
		
//		 
//		
//		circle1.radius = 10;
//		circle1.diameter = 20;
//		circle1.circumference = 62.8;
//		circle1.area = 314;
		
		
//		double radius;
//		System.out.println(radius);
//		생성은 했지만 초기화가 되어 있지 않아서 사용 불가함
		
		
	}

}
 